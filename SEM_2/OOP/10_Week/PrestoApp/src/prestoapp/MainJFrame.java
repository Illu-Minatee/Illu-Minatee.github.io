/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

// Name: Nischal Shrestha Kasula
// Student ID: 100995481
// Date: July 23, 2025
// App name: 
// Description: The "Presto Simulator" is a Java Swing desktop application 
// that simulates a simplified Presto card management system. 
// It features a GUI for managing cards, 
// and allows users to perform transactions like tapping and topping up. 
// The project demonstrates principles of Object-Oriented Programming 
// and includes error handling for a robust user experience.

package prestoapp;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kasul
 */
public class MainJFrame extends javax.swing.JFrame {

    // ArrayList to hold all of our PrestoCard objects
    ArrayList<PrestoCard> prestoCards = new ArrayList<>();

    // The fixed fare for tapping a card, as per the lab document
    final double FARE = 2.50;
    
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        // Add some sample data to get started
        prestoCards.add(new PrestoCard("Nischal", 50.00));
        prestoCards.add(new PrestoCard("Hannah", 25.00));
        prestoCards.add(new PrestoCard("Ares", 0.50));

        // Update the table to show the sample cards
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addCardDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cardholderNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        balanceSpinner = new javax.swing.JSpinner();
        cancelAddButton = new javax.swing.JButton();
        addCardButton = new javax.swing.JButton();
        topUpDialog = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        cardNameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        topUpSpinner = new javax.swing.JSpinner();
        cancelTopUpButton = new javax.swing.JButton();
        topUpButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        cardsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prestoTable = new javax.swing.JTable();
        deleteSelectedButton = new javax.swing.JButton();
        tapSelectedButton = new javax.swing.JButton();
        topUpSelectedButton = new javax.swing.JButton();
        addNewCardButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        addCardDialog.setTitle("Add New Card");
        addCardDialog.setModal(true);
        addCardDialog.setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Cardholder's Name:");

        cardholderNameField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Initial Balance:");

        balanceSpinner.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        balanceSpinner.setModel(new javax.swing.SpinnerNumberModel(10.0d, 0.5d, null, 0.5d));
        balanceSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(balanceSpinner, "$0.00"));

        cancelAddButton.setBackground(new java.awt.Color(255, 102, 102));
        cancelAddButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancelAddButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelAddButton.setText("Cancel");
        cancelAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddButtonActionPerformed(evt);
            }
        });

        addCardButton.setBackground(new java.awt.Color(255, 102, 102));
        addCardButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addCardButton.setForeground(new java.awt.Color(255, 255, 255));
        addCardButton.setText("Add Card");
        addCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardholderNameField)
                    .addComponent(balanceSpinner)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cancelAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(addCardButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardholderNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(balanceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelAddButton)
                    .addComponent(addCardButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addCardDialogLayout = new javax.swing.GroupLayout(addCardDialog.getContentPane());
        addCardDialog.getContentPane().setLayout(addCardDialogLayout);
        addCardDialogLayout.setHorizontalGroup(
            addCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
            .addGroup(addCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addCardDialogLayout.setVerticalGroup(
            addCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
            .addGroup(addCardDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        topUpDialog.setTitle("Top-up Card");
        topUpDialog.setModal(true);
        topUpDialog.setResizable(false);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        cardNameLabel.setFont(new java.awt.Font("NSimSun", 1, 24)); // NOI18N
        cardNameLabel.setText("Nischal's Card");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Top-up Amount:");

        topUpSpinner.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        topUpSpinner.setModel(new javax.swing.SpinnerNumberModel(10.0d, 1.0d, null, 0.5d));
        topUpSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(topUpSpinner, "$0.00"));

        cancelTopUpButton.setBackground(new java.awt.Color(255, 0, 0));
        cancelTopUpButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelTopUpButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelTopUpButton.setText("Cancel");
        cancelTopUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelTopUpButtonActionPerformed(evt);
            }
        });

        topUpButton.setBackground(new java.awt.Color(255, 0, 0));
        topUpButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        topUpButton.setForeground(new java.awt.Color(255, 255, 255));
        topUpButton.setText("Top-up");
        topUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topUpSpinner)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardNameLabel)
                            .addComponent(jLabel4))
                        .addGap(0, 76, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cancelTopUpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(topUpButton)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topUpSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topUpButton)
                    .addComponent(cancelTopUpButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout topUpDialogLayout = new javax.swing.GroupLayout(topUpDialog.getContentPane());
        topUpDialog.getContentPane().setLayout(topUpDialogLayout);
        topUpDialogLayout.setHorizontalGroup(
            topUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        topUpDialogLayout.setVerticalGroup(
            topUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Presto Machine- Nischal");
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        titleLabel.setText("Presto Machine");

        cardsLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        cardsLabel.setText("We currently have 3 cards registered!");

        prestoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cardholder's Name", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        prestoTable.getTableHeader().setResizingAllowed(false);
        prestoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(prestoTable);
        if (prestoTable.getColumnModel().getColumnCount() > 0) {
            prestoTable.getColumnModel().getColumn(1).setResizable(false);
            prestoTable.getColumnModel().getColumn(1).setPreferredWidth(280);
        }

        deleteSelectedButton.setBackground(new java.awt.Color(255, 0, 0));
        deleteSelectedButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteSelectedButton.setText("Delete Selected");
        deleteSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSelectedButtonActionPerformed(evt);
            }
        });

        tapSelectedButton.setBackground(new java.awt.Color(255, 0, 0));
        tapSelectedButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tapSelectedButton.setText("Tap Selected");
        tapSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapSelectedButtonActionPerformed(evt);
            }
        });

        topUpSelectedButton.setBackground(new java.awt.Color(255, 0, 0));
        topUpSelectedButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        topUpSelectedButton.setText("Top-Up Selected");
        topUpSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpSelectedButtonActionPerformed(evt);
            }
        });

        addNewCardButton.setBackground(new java.awt.Color(255, 0, 0));
        addNewCardButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addNewCardButton.setText("Add New Card");
        addNewCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCardButtonActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prestoapp/1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(titleLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(cardsLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(deleteSelectedButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tapSelectedButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(topUpSelectedButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addNewCardButton)))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSelectedButton)
                    .addComponent(tapSelectedButton)
                    .addComponent(topUpSelectedButton)
                    .addComponent(addNewCardButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * When clicked add card button a dialog box appears
     * @param evt 
     */
    private void addNewCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCardButtonActionPerformed
        
        // This command tells the dialog to resize itself to fit its contents perfectly.
        addCardDialog.pack();

        // This command centers the dialog box on top of the main window.
        addCardDialog.setLocationRelativeTo(this);

        // This command makes the dialog box pop up on the screen.
        addCardDialog.setVisible(true);
    }//GEN-LAST:event_addNewCardButtonActionPerformed
    
    /**
     * Making Cancel button work 
     * @param evt 
     */
    private void cancelAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddButtonActionPerformed
        
        addCardDialog.setVisible(false); // This simply hides the dialog thus cancel button works

        cardholderNameField.setText(""); // Clears the text field
        balanceSpinner.setValue(10.0); // Resets the spinner to its default value

    }//GEN-LAST:event_cancelAddButtonActionPerformed

    /**
     * Make the Add Card button create a new PrestoCard object, 
     * add it to our ArrayList, 
     * update the table, 
     * and then hide the dialog.
     * @param evt 
     */
    private void addCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCardButtonActionPerformed
        
        // 1. Get the user's input from the text field and spinner
        String name = cardholderNameField.getText().trim(); // .trim() removes any accidental spaces
        double balance = (double) balanceSpinner.getValue();

        // 2. Validate the input (make sure the name is not empty)
        if (name.isEmpty()) {
            // Show an error message if the name field is blank
            JOptionPane.showMessageDialog(this, "Cardholder name cannot be empty.");
        } else {
            // 3. If the input is valid, create the new card
            PrestoCard newCard = new PrestoCard(name, balance);
            prestoCards.add(newCard); // Add it to our ArrayList

            // 4. IMPORTANT: Refresh the main table to show the new card
            updateTable();

            // 5. Hide the dialog box now that we are done
            addCardDialog.setVisible(false);

            // 6. (Optional but good practice) Reset the fields for next time
            cardholderNameField.setText("");
            balanceSpinner.setValue(10.0);
        }

    }//GEN-LAST:event_addCardButtonActionPerformed

    private void deleteSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSelectedButtonActionPerformed

        // 1. Find out which row the user has selected.
        // The getSelectedRow() method returns the index of the selected row.
        // If nothing is selected, it returns -1.
        int selectedIndex = prestoTable.getSelectedRow();

        // 2. Check if the user actually selected something.
        if (selectedIndex == -1) {
            // If nothing was selected, show a warning message.
            JOptionPane.showMessageDialog(this, "You must select a card to delete.");
        } 
        
        else 
        {
            // 3. If a row was selected, remove the card from our ArrayList.
            // The index of the ArrayList matches the selected row index.
            prestoCards.remove(selectedIndex);

            // 4. IMPORTANT: Refresh the table to show the card has been removed.
            updateTable();
        }

        
    }//GEN-LAST:event_deleteSelectedButtonActionPerformed

    private void tapSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapSelectedButtonActionPerformed
        
        // 1. Get the index of the selected row.
        int selectedIndex = prestoTable.getSelectedRow();

        // 2. Check if a row was selected.
        if (selectedIndex == -1) 
        {
            // Show a warning if nothing is selected.
            JOptionPane.showMessageDialog(this, "You must select a card to tap.");
        } 
        else 
        {
            // 3. Get the actual PrestoCard object from our ArrayList.
            PrestoCard selectedCard = prestoCards.get(selectedIndex);

            // 4. Call the .tap() method on that card object.
            // The tap() method returns true for success and false for failure.
            boolean success = selectedCard.tap();

            // 5. Check the result.
            if (success) 
            {
                // If the tap was successful, just update the table to show the new balance.
                updateTable();
            } 
            else 
            {
                // If the tap failed, show an insufficient funds warning message.
                JOptionPane.showMessageDialog(this, 
                    "Insufficient funds! Please top-up your card.", 
                    "Tap Failed", 
                    JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_tapSelectedButtonActionPerformed

    
    /**
     * When a user selects a card and clicks topUpSelectedButton,
     * open the topUpDialog 
     * And display the correct cardholder's name in it.
     * @param evt 
     */
    private void topUpSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpSelectedButtonActionPerformed
        
        // 1. Get the index of the selected row.
        int selectedIndex = prestoTable.getSelectedRow();

        // 2. Check if a row was actually selected.
        if (selectedIndex == -1) {
            // Show an error if nothing is selected.
            JOptionPane.showMessageDialog(this, "You must select a card to top-up.");
        } else {
            // 3. Get the selected PrestoCard object from the ArrayList.
            PrestoCard selectedCard = prestoCards.get(selectedIndex);

            // 4. Set the title label inside the top-up dialog.
            // This makes it say "Fred's Card", "Hannah's Card", etc.
            cardNameLabel.setText(selectedCard.getName() + "'s Card");

            // 5. Now, make the dialog appear.
            topUpDialog.pack();
            topUpDialog.setLocationRelativeTo(this);
            topUpDialog.setVisible(true);
        }

        
    }//GEN-LAST:event_topUpSelectedButtonActionPerformed

    /**
     * Make the Cancel button hide the top-up dialog.
     * @param evt 
     */
    private void cancelTopUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelTopUpButtonActionPerformed
        
        // Hide the dialog
        topUpDialog.setVisible(false);

        // Reset the spinner for next time
        topUpSpinner.setValue(10.0);
        
    }//GEN-LAST:event_cancelTopUpButtonActionPerformed

    /**
     * Make the Top-up button add the specified funds to the selected card
     * Refresh the main table
     * And then close the dialog.
     * @param evt 
     */
    private void topUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpButtonActionPerformed
        
        // 1. We need to know which card is selected on the main table.
        int selectedIndex = prestoTable.getSelectedRow();

        // 2. Get the amount from the spinner.
        double amount = (double) topUpSpinner.getValue();

        // 3. A safety check to make sure a row is still selected.
        if (selectedIndex != -1) {
            // 4. Get the card, call its topUp method, and update the table.
            PrestoCard selectedCard = prestoCards.get(selectedIndex);
            selectedCard.topUp(amount);
            updateTable();

            // 5. Hide the dialog.
            topUpDialog.setVisible(false);

            // 6. Reset the spinner.
            topUpSpinner.setValue(10.0);
        }
        
    }//GEN-LAST:event_topUpButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    
        /**
     * Updates the GUI table to match the data in the prestoCards ArrayList.
     * This method should be called every time a card is added, removed, or changed.
     */
    void updateTable() {
        // First, update the label that shows how many cards are registered.
        cardsLabel.setText("We currently have " + prestoCards.size() + " cards registered!");

        // Get the "model" of our table. The model is what manages the table's data.
        DefaultTableModel model = (DefaultTableModel) prestoTable.getModel();

        // Clear any existing rows from the table, so we can start fresh.
        model.setRowCount(0);

        // Loop through every PrestoCard in our ArrayList.
        for (int i = 0; i < prestoCards.size(); i++) {
            PrestoCard currentCard = prestoCards.get(i); // Get the card at the current position.

            // Create a row of data for the table.
            // The order MUST match the columns: ID, Name, Balance.
            Object[] rowData = {
                i + 1, // The ID is the index + 1
                currentCard.getName(),
                String.format("$%.2f", currentCard.getBalance()) // Format balance to show 2 decimal places
            };

            // Add the new row of data to our table's model.
            model.addRow(rowData);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCardButton;
    private javax.swing.JDialog addCardDialog;
    private javax.swing.JButton addNewCardButton;
    private javax.swing.JSpinner balanceSpinner;
    private javax.swing.JButton cancelAddButton;
    private javax.swing.JButton cancelTopUpButton;
    private javax.swing.JLabel cardNameLabel;
    private javax.swing.JTextField cardholderNameField;
    private javax.swing.JLabel cardsLabel;
    private javax.swing.JButton deleteSelectedButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable prestoTable;
    private javax.swing.JButton tapSelectedButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton topUpButton;
    private javax.swing.JDialog topUpDialog;
    private javax.swing.JButton topUpSelectedButton;
    private javax.swing.JSpinner topUpSpinner;
    // End of variables declaration//GEN-END:variables
}
